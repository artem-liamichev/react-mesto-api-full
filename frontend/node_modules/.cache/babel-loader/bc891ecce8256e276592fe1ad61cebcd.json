{"ast":null,"code":"export const BASE_URL = 'http://localhost:3000';\n\nconst checkServerResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject('Возникла ошибка');\n};\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    credentials: 'include',\n    headers,\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkServerResponse(res));\n};\nexport const authorize = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkServerResponse(res));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers\n  }).then(res => checkServerResponse(res));\n};","map":{"version":3,"names":["BASE_URL","checkServerResponse","res","ok","json","Promise","reject","headers","register","password","email","fetch","method","credentials","body","JSON","stringify","then","authorize","getContent","token"],"sources":["C:/Users/mi/dev/react-mesto-api-full/frontend/src/utils/apiAuth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:3000';\r\n\r\nconst checkServerResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject('Возникла ошибка')\r\n}\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\nexport const register = ({ password, email }) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers,\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n};\r\n\r\nexport const authorize = ({ email, password }) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;;AAEP,MAAMC,mBAAmB,GAAIC,GAAD,IAAS;EACnC,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACD,CALD;;AAOA,MAAMC,OAAO,GAAG;EACd,UAAU,kBADI;EAEd,gBAAgB;AAFF,CAAhB;AAKA,OAAO,MAAMC,QAAQ,GAAG,QAAyB;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAC/C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,WAAW,EAAE,SAFoB;IAGjCN,OAHiC;IAIjCO,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,QAAF;MAAYC;IAAZ,CAAf;EAJ2B,CAAvB,CAAL,CAMJO,IANI,CAMEf,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAN7B,CAAP;AAOD,CARM;AAUP,OAAO,MAAMgB,SAAS,GAAG,SAAyB;EAAA,IAAxB;IAAER,KAAF;IAASD;EAAT,CAAwB;EAChD,OAAOE,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCL,OAFiC;IAGjCO,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,KAAF;MAASD;IAAT,CAAf;EAH2B,CAAvB,CAAL,CAKJQ,IALI,CAKEf,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAL7B,CAAP;AAMD,CAPM;AASP,OAAO,MAAMiB,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACnCY,MAAM,EAAE,KAD2B;IAEnCL;EAFmC,CAAzB,CAAL,CAIJU,IAJI,CAIEf,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAJ7B,CAAP;AAKD,CANM"},"metadata":{},"sourceType":"module"}