{"ast":null,"code":"class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._token = token;\n    this._headers = {\n      'Content-type': 'application/json',\n      'Authorization': this._token\n    };\n  }\n\n  _checkServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject('Возникла ошибка');\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()]);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n  addProfile() {\n    const body = {\n      name: userName,\n      about: data.job\n    };\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.userName,\n      link: data.userDescription\n    };\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  } // setLike(cardId) {\n  //   return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //     method: 'PUT',\n  //     headers: this._headers,\n  //   })\n  //   .then((res) => {\n  //     return this._checkServerResponse(res);\n  //   })\n  // }\n  // resetLike(cardId) {\n  //   return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //     method: 'DELETE',\n  //     headers: this._headers,\n  //   })\n  //   .then((res) => {\n  //     return this._checkServerResponse(res);\n  //   })\n  // }\n\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar\n    };\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(res => {\n      return this._checkServerResponse(res);\n    });\n  }\n\n}\n\nexport const api = new Api('https://mesto.nomoreparties.co/v1/cohort-43', '13e0d01a-3631-45a5-b3a6-1a7f87295049');","map":{"version":3,"names":["Api","constructor","url","token","_url","_token","_headers","_checkServerResponse","res","ok","json","Promise","reject","getAllNeededData","all","getProfile","getInitialCards","fetch","headers","then","addProfile","body","name","userName","about","data","job","method","JSON","stringify","addCard","link","userDescription","deleteCard","cardId","changeLikeCardStatus","isLiked","addAvatar","avatar","api"],"sources":["C:/Users/mi/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._token = token;\n    this._headers = {\n      'Content-type': 'application/json',\n      'Authorization': this._token,\n    }\n  }\n\n  _checkServerResponse(res){\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Возникла ошибка')\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()])\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._checkServerResponse(res);\n      })\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._checkServerResponse(res);\n      })\n  }\n\n  addProfile() {\n    const body = {\n      name: userName,\n      about: data.job\n    }\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then((res) => {\n      return this._checkServerResponse(res);\n    })\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.userName,\n      link: data.userDescription\n    }\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then((res) => {\n      return this._checkServerResponse(res);\n    })\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then((res) => {\n      return this._checkServerResponse(res);\n    })\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    })\n    .then((res) => {\n      return this._checkServerResponse(res);\n    })\n  }\n\n  // setLike(cardId) {\n  //   return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //     method: 'PUT',\n  //     headers: this._headers,\n  //   })\n  //   .then((res) => {\n  //     return this._checkServerResponse(res);\n  //   })\n  // }\n\n  // resetLike(cardId) {\n  //   return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //     method: 'DELETE',\n  //     headers: this._headers,\n  //   })\n  //   .then((res) => {\n  //     return this._checkServerResponse(res);\n  //   })\n  // }\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar,\n    }\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then((res) => {\n      return this._checkServerResponse(res);\n    })\n  }\n }\n\n export const api = new Api('https://mesto.nomoreparties.co/v1/cohort-43', '13e0d01a-3631-45a5-b3a6-1a7f87295049')\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}