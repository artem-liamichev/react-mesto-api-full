{"ast":null,"code":"import _objectSpread from\"C:/Users/mi/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export var BASE_URL='http://localhost:3000';var checkServerResponse=function checkServerResponse(res){if(res.ok){return res.json();}return Promise.reject('Возникла ошибка');};var headers={'Accept':'application/json','Content-Type':'application/json'};export var register=function register(_ref){var password=_ref.password,email=_ref.email;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',// credentials: 'include',\nheaders:headers,body:JSON.stringify({password:password,email:email})}).then(function(res){return checkServerResponse(res);});};export var authorize=function authorize(_ref2){var email=_ref2.email,password=_ref2.password;return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',// credentials: 'include',\nheaders:headers,body:JSON.stringify({email:email,password:password})}).then(function(res){return checkServerResponse(res);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:_objectSpread({},headers)}).then(function(res){return checkServerResponse(res);});};","map":{"version":3,"names":["BASE_URL","checkServerResponse","res","ok","json","Promise","reject","headers","register","password","email","fetch","method","body","JSON","stringify","then","authorize","getContent","token"],"sources":["C:/Users/mi/dev/react-mesto-api-full/frontend/src/utils/apiAuth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:3000';\r\n\r\nconst checkServerResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject('Возникла ошибка')\r\n}\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\nexport const register = ({ password, email }) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    // credentials: 'include',\r\n    headers,\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n};\r\n\r\nexport const authorize = ({ email, password }) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    // credentials: 'include',\r\n    headers,\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    \r\n    headers: {\r\n      ...headers,\r\n      // credentials: 'include',\r\n    }\r\n  })\r\n    .then((res) => checkServerResponse(res))\r\n}"],"mappings":"kIAAA,MAAO,IAAMA,SAAQ,CAAG,uBAAjB,CAEP,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,GAAD,CAAS,CACnC,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,QAAO,CAACC,MAAR,CAAe,iBAAf,CAAP,CACD,CALD,CAOA,GAAMC,QAAO,CAAG,CACd,SAAU,kBADI,CAEd,eAAgB,kBAFF,CAAhB,CAKA,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAW,MAAyB,IAAtBC,SAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CAC/C,MAAOC,MAAK,WAAIX,QAAJ,YAAuB,CACjCY,MAAM,CAAE,MADyB,CAEjC;AACAL,OAAO,CAAPA,OAHiC,CAIjCM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEN,QAAQ,CAARA,QAAF,CAAYC,KAAK,CAALA,KAAZ,CAAf,CAJ2B,CAAvB,CAAL,CAMJM,IANI,CAMC,SAACd,GAAD,QAASD,oBAAmB,CAACC,GAAD,CAA5B,EAND,CAAP,CAOD,CARM,CAUP,MAAO,IAAMe,UAAS,CAAG,QAAZA,UAAY,OAAyB,IAAtBP,MAAsB,OAAtBA,KAAsB,CAAfD,QAAe,OAAfA,QAAe,CAChD,MAAOE,MAAK,WAAIX,QAAJ,YAAuB,CACjCY,MAAM,CAAE,MADyB,CAEjC;AACAL,OAAO,CAAPA,OAHiC,CAIjCM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEL,KAAK,CAALA,KAAF,CAASD,QAAQ,CAARA,QAAT,CAAf,CAJ2B,CAAvB,CAAL,CAMJO,IANI,CAMC,SAACd,GAAD,QAASD,oBAAmB,CAACC,GAAD,CAA5B,EAND,CAAP,CAOD,CARM,CAUP,MAAO,IAAMgB,WAAU,CAAG,QAAbA,WAAa,CAACC,KAAD,CAAW,CACnC,MAAOR,MAAK,WAAIX,QAAJ,cAAyB,CACnCY,MAAM,CAAE,KAD2B,CAGnCL,OAAO,kBACFA,OADE,CAH4B,CAAzB,CAAL,CAQJS,IARI,CAQC,SAACd,GAAD,QAASD,oBAAmB,CAACC,GAAD,CAA5B,EARD,CAAP,CASD,CAVM"},"metadata":{},"sourceType":"module"}