{"ast":null,"code":"class Api {\n  constructor(url, token) {\n    this._getToken = () => localStorage.getItem('jwt');\n\n    this._url = url;\n    this._token = token;\n  }\n\n  // _getToken = (token) => {\n  //   localStorage.getItem('jwt');\n  //   console.log('localStorage:', localStorage.jwt)\n  // } \n  _checkServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject('Возникла ошибка');\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()]);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  addProfile(data) {\n    const body = {\n      name: data.name,\n      about: data.about\n    };\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.name,\n      link: data.link\n    };\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar\n    };\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n}\n\nexport const api = new Api({\n  url: 'http://localhost:3000',\n  token: this._getToken()\n});","map":{"version":3,"names":["Api","constructor","url","token","_getToken","localStorage","getItem","_url","_token","_checkServerResponse","res","ok","json","Promise","reject","getAllNeededData","all","getProfile","getInitialCards","fetch","headers","_headers","then","addProfile","data","body","name","about","method","JSON","stringify","addCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","addAvatar","avatar","api"],"sources":["C:/Users/mi/dev/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._token = token;\n  }\n\n  _getToken = () => localStorage.getItem('jwt');\n\n  // _getToken = (token) => {\n  //   localStorage.getItem('jwt');\n  //   console.log('localStorage:', localStorage.jwt)\n  // } \n\n\n  _checkServerResponse(res){\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Возникла ошибка')\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()])\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards/`, {\n      headers: this._headers\n    })\n      .then(this._checkServerResponse)\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    })\n      .then(this._checkServerResponse)\n  }\n\n  addProfile(data) {\n    const body = {\n      name: data.name,\n      about: data.about\n    }\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.name,\n      link: data.link\n    }\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkServerResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    })\n    .then(this._checkServerResponse)\n  }\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar,\n    }\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n }\n\n export const api = new Api({\n  url: 'http://localhost:3000',\n  token: this._getToken(),\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}