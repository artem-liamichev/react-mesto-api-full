{"ast":null,"code":"// Вся работа с \"новым\" сервером авторизации (запрос на регистрацию, \n// авторизацию, проверку валидности токена) должна быть инкапсулирована \n// в отдельном классе (аналогично старому классу Api, его оставляем без изменений). \n// Можно и без класса, главное, чтобы этот набор функций лежал в отдельном модуле, \n// например, apiAuth.js. Постарайтесь сделать так, чтобы работа с localStorage \n// производилась снаружи этого модуля/класса, например, \n// в компоненте App\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkServerResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject('Возникла ошибка');\n};\n\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkServerResponse(res));\n};\nexport const authorize = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkServerResponse(res));\n};\nexport const getContent = jwt => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: { ...headers,\n      'Authorization': `Bearer ${jwt}`\n    }\n  }).then(res => checkServerResponse(res));\n};","map":{"version":3,"names":["BASE_URL","checkServerResponse","res","ok","json","Promise","reject","headers","register","password","email","fetch","method","body","JSON","stringify","then","authorize","getContent","jwt"],"sources":["C:/Users/mi/dev/react-mesto-auth/src/components/apiAuth.js"],"sourcesContent":["// Вся работа с \"новым\" сервером авторизации (запрос на регистрацию, \r\n// авторизацию, проверку валидности токена) должна быть инкапсулирована \r\n// в отдельном классе (аналогично старому классу Api, его оставляем без изменений). \r\n// Можно и без класса, главное, чтобы этот набор функций лежал в отдельном модуле, \r\n// например, apiAuth.js. Постарайтесь сделать так, чтобы работа с localStorage \r\n// производилась снаружи этого модуля/класса, например, \r\n// в компоненте App\r\n\r\nexport const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst checkServerResponse = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject('Возникла ошибка')\r\n  }\r\n\r\nconst headers = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n};\r\n\r\nexport const register = ({ password, email }) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n    .then((res) => checkServerResponse(res))\r\n  }; \r\n\r\nexport const authorize = ({email, password}) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then((res) => checkServerResponse(res))\r\n  }; \r\n\r\nexport const getContent = (jwt) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            ...headers,\r\n            'Authorization' : `Bearer ${jwt}`,\r\n        }\r\n    })\r\n    .then((res) => checkServerResponse(res))\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,mBAAmB,GAAIC,GAAD,IAAS;EACjC,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACD,CALH;;AAOA,MAAMC,OAAO,GAAG;EACZ,UAAU,kBADE;EAEZ,gBAAgB;AAFJ,CAAhB;AAKA,OAAO,MAAMC,QAAQ,GAAG,QAAyB;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAC7C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCL,OAFiC;IAGjCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,QAAF;MAAYC;IAAZ,CAAf;EAH2B,CAAvB,CAAL,CAKNM,IALM,CAKAd,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAL3B,CAAP;AAMD,CAPI;AASP,OAAO,MAAMe,SAAS,GAAG,SAAuB;EAAA,IAAtB;IAACP,KAAD;IAAQD;EAAR,CAAsB;EAC5C,OAAOE,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCL,OAFiC;IAGjCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACL,KAAD;MAAQD;IAAR,CAAf;EAH2B,CAAvB,CAAL,CAKNO,IALM,CAKAd,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAL3B,CAAP;AAMD,CAPI;AASP,OAAO,MAAMgB,UAAU,GAAIC,GAAD,IAAS;EAC/B,OAAOR,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACjCY,MAAM,EAAE,KADyB;IAEjCL,OAAO,EAAE,EACL,GAAGA,OADE;MAEL,iBAAmB,UAASY,GAAI;IAF3B;EAFwB,CAAzB,CAAL,CAONH,IAPM,CAOAd,GAAD,IAASD,mBAAmB,CAACC,GAAD,CAP3B,CAAP;AAQH,CATM"},"metadata":{},"sourceType":"module"}