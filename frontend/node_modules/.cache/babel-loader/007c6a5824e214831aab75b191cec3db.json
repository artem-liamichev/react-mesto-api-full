{"ast":null,"code":"class Api {\n  constructor(url) {\n    this._getToken = () => localStorage.getItem('jwt');\n\n    this._url = url;\n    this._headers = {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    };\n  }\n\n  _checkServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject('Возникла ошибка');\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()]);\n  }\n\n  getInitialCards() {\n    console.log('getInitialCards():', getInitialCards());\n    return fetch(`${this._url}/cards/`, {\n      headers: { ...this._headers,\n        'Authorization': `Bearer ${this._getToken()}`\n      }\n    }).then(this._checkServerResponse);\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: { ...this._headers,\n        'Authorization': `Bearer ${this._getToken()}`\n      }\n    }).then(this._checkServerResponse);\n  }\n\n  addProfile(data) {\n    const body = {\n      name: data.name,\n      about: data.about\n    };\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.name,\n      link: data.link\n    };\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: { ...this._headers,\n        'Authorization': `Bearer ${this._getToken()}`\n      }\n    }).then(this._checkServerResponse);\n  }\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar\n    };\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n    }).then(this._checkServerResponse);\n  }\n\n}\n\nexport const api = new Api('http://localhost:3000');","map":{"version":3,"names":["Api","constructor","url","_getToken","localStorage","getItem","_url","_headers","_checkServerResponse","res","ok","json","Promise","reject","getAllNeededData","all","getProfile","getInitialCards","console","log","fetch","headers","then","addProfile","data","body","name","about","method","JSON","stringify","addCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","addAvatar","avatar","api"],"sources":["C:/Users/mi/dev/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(url) {\n    this._url = url;\n    this._headers = {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n    }\n  }\n\n  _getToken = () => localStorage.getItem('jwt');\n\n  _checkServerResponse(res){\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Возникла ошибка')\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getProfile(), this.getInitialCards()])\n  }\n\n  getInitialCards() {\n    console.log('getInitialCards():', getInitialCards())\n    return fetch(`${this._url}/cards/`, {\n      headers: {\n      ...this._headers,\n      'Authorization': `Bearer ${this._getToken()}`,\n    }\n    })\n      .then(this._checkServerResponse)\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        ...this._headers,\n        'Authorization': `Bearer ${this._getToken()}`,\n      }\n    })\n      .then(this._checkServerResponse)\n  }\n\n  addProfile(data) {\n    const body = {\n      name: data.name,\n      about: data.about\n    }\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n\n  addCard(data) {\n    const body = {\n      name: data.name,\n      link: data.link\n    }\n    return fetch(`${this._url}/cards/`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkServerResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: {\n        ...this._headers,\n        'Authorization': `Bearer ${this._getToken()}`,\n      }\n    })\n    .then(this._checkServerResponse)\n  }\n\n  addAvatar(data) {\n    const body = {\n      avatar: data.avatar,\n    }\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body)\n})\n    .then(this._checkServerResponse)\n  }\n }\n\n export const api = new Api('http://localhost:3000')\n"],"mappings":"AAAA,MAAMA,GAAN,CAAU;EACRC,WAAW,CAACC,GAAD,EAAM;IAAA,KAQjBC,SARiB,GAQL,MAAMC,YAAY,CAACC,OAAb,CAAqB,KAArB,CARD;;IACf,KAAKC,IAAL,GAAYJ,GAAZ;IACA,KAAKK,QAAL,GAAgB;MACd,UAAU,kBADI;MAEd,gBAAgB;IAFF,CAAhB;EAID;;EAIDC,oBAAoB,CAACC,GAAD,EAAK;IACvB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;EACD;;EAEDC,gBAAgB,GAAG;IACjB,OAAOF,OAAO,CAACG,GAAR,CAAY,CAAC,KAAKC,UAAL,EAAD,EAAoB,KAAKC,eAAL,EAApB,CAAZ,CAAP;EACD;;EAEDA,eAAe,GAAG;IAChBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,eAAe,EAAjD;IACA,OAAOG,KAAK,CAAE,GAAE,KAAKd,IAAK,SAAd,EAAwB;MAClCe,OAAO,EAAE,EACT,GAAG,KAAKd,QADC;QAET,iBAAkB,UAAS,KAAKJ,SAAL,EAAiB;MAFnC;IADyB,CAAxB,CAAL,CAMJmB,IANI,CAMC,KAAKd,oBANN,CAAP;EAOD;;EAEDQ,UAAU,GAAG;IACX,OAAOI,KAAK,CAAE,GAAE,KAAKd,IAAK,WAAd,EAA0B;MACpCe,OAAO,EAAE,EACP,GAAG,KAAKd,QADD;QAEP,iBAAkB,UAAS,KAAKJ,SAAL,EAAiB;MAFrC;IAD2B,CAA1B,CAAL,CAMJmB,IANI,CAMC,KAAKd,oBANN,CAAP;EAOD;;EAEDe,UAAU,CAACC,IAAD,EAAO;IACf,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAEF,IAAI,CAACE,IADA;MAEXC,KAAK,EAAEH,IAAI,CAACG;IAFD,CAAb;IAIA,OAAOP,KAAK,CAAE,GAAE,KAAKd,IAAK,WAAd,EAA0B;MACpCsB,MAAM,EAAE,OAD4B;MAEpCP,OAAO,EAAE,KAAKd,QAFsB;MAGpCkB,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;IAH8B,CAA1B,CAAL,CAKNH,IALM,CAKD,KAAKd,oBALJ,CAAP;EAMD;;EAEDuB,OAAO,CAACP,IAAD,EAAO;IACZ,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAEF,IAAI,CAACE,IADA;MAEXM,IAAI,EAAER,IAAI,CAACQ;IAFA,CAAb;IAIA,OAAOZ,KAAK,CAAE,GAAE,KAAKd,IAAK,SAAd,EAAwB;MAClCsB,MAAM,EAAE,MAD0B;MAElCP,OAAO,EAAE,KAAKd,QAFoB;MAGlCkB,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;IAH4B,CAAxB,CAAL,CAKNH,IALM,CAKD,KAAKd,oBALJ,CAAP;EAMD;;EAEDyB,UAAU,CAACC,MAAD,EAAS;IACjB,OAAOd,KAAK,CAAE,GAAE,KAAKd,IAAK,UAAS4B,MAAO,EAA9B,EAAiC;MAC3CN,MAAM,EAAE,QADmC;MAE3CP,OAAO,EAAE,KAAKd;IAF6B,CAAjC,CAAL,CAINe,IAJM,CAID,KAAKd,oBAJJ,CAAP;EAKD;;EAED2B,oBAAoB,CAACD,MAAD,EAASE,OAAT,EAAkB;IACpC,OAAOhB,KAAK,CAAE,GAAE,KAAKd,IAAK,UAAS4B,MAAO,QAA9B,EAAuC;MACjDN,MAAM,EAAG,GAAEQ,OAAO,GAAG,KAAH,GAAW,QAAS,EADW;MAEjDf,OAAO,EAAE,EACP,GAAG,KAAKd,QADD;QAEP,iBAAkB,UAAS,KAAKJ,SAAL,EAAiB;MAFrC;IAFwC,CAAvC,CAAL,CAONmB,IAPM,CAOD,KAAKd,oBAPJ,CAAP;EAQD;;EAED6B,SAAS,CAACb,IAAD,EAAO;IACd,MAAMC,IAAI,GAAG;MACXa,MAAM,EAAEd,IAAI,CAACc;IADF,CAAb;IAGA,OAAOlB,KAAK,CAAE,GAAE,KAAKd,IAAK,kBAAd,EAAiC;MAC3CsB,MAAM,EAAE,OADmC;MAE3CP,OAAO,EAAE,KAAKd,QAF6B;MAG3CkB,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;IAHqC,CAAjC,CAAL,CAKNH,IALM,CAKD,KAAKd,oBALJ,CAAP;EAMD;;AAlGO;;AAqGT,OAAO,MAAM+B,GAAG,GAAG,IAAIvC,GAAJ,CAAQ,uBAAR,CAAZ"},"metadata":{},"sourceType":"module"}